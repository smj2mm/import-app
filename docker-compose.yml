version: '3'
services:
  postgres:
    image: postgres:13-alpine
    container_name: canix-postgres
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    command: 
      "postgres -c 'max_connections=500'"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    networks:
      - canix-network
    # labels:
    #   description: "Postgresql Database"
    #   service: "postgresql"
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "
        while ! nc -z postgres 5432; do
          echo 'Waiting for Postgres...'
          sleep 1
        done
        echo 'Postgres is up - executing command'
        ./bin/rails server
      "
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATBASE_URL=postgres://postgres:5432/${POSTGRES_DB}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
    volumes:
      - app-storage:/rails/storage
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    networks:
      - canix-network

  frontend:
    build:
      context: ./canix
      # args:
      #   REACT_APP_API_URL: http://backend:3000/api/v1 # Adjust the URL based on your backend service name
    ports:
      - "3001:3000" # Map the frontend to a different port, if needed
    environment:
      REACT_APP_API_URL: http://backend:3000/api/v1 # Adjust the URL based on your backend service name
    depends_on:
      - backend
    networks:
      - canix-network

volumes:
  postgres:
  app-storage:

networks:
  canix-network:
    driver: bridge
